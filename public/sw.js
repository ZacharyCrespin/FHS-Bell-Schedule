const OFFLINE_VERSION=2,CACHE_NAME="offline",OFFLINE_URL="index.html";self.addEventListener("install",event=>{event.waitUntil((async()=>{const cache=await caches.open("offline");await cache.add(new Request(OFFLINE_URL,{cache:"reload"}))})()),self.skipWaiting()}),self.addEventListener("activate",event=>{event.waitUntil((async()=>{"navigationPreload"in self.registration&&await self.registration.navigationPreload.enable()})()),self.clients.claim()}),self.addEventListener("fetch",event=>{"navigate"===event.request.mode&&event.respondWith((async()=>{try{const preloadResponse=await event.preloadResponse;if(preloadResponse)return preloadResponse;const networkResponse=await fetch(event.request);return networkResponse}catch(error){console.log("Fetch failed; returning offline page instead.",error);const cache=await caches.open("offline"),cachedResponse=await cache.match(OFFLINE_URL);return cachedResponse}})())});